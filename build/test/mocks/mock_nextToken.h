/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_NEXTTOKEN_H
#define _MOCK_NEXTTOKEN_H

#include "nextToken.h"

void mock_nextToken_Init(void);
void mock_nextToken_Destroy(void);
void mock_nextToken_Verify(void);




#define nextToken_IgnoreAndReturn(cmock_retval) nextToken_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void nextToken_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, Token* cmock_to_return);
#define nextToken_ExpectAndReturn(tokenizer, cmock_retval) nextToken_CMockExpectAndReturn(__LINE__, tokenizer, cmock_retval)
void nextToken_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, Tokenizer* tokenizer, Token* cmock_to_return);
typedef Token* (* CMOCK_nextToken_CALLBACK)(Tokenizer* tokenizer, int cmock_num_calls);
void nextToken_StubWithCallback(CMOCK_nextToken_CALLBACK Callback);
#define isOperator_IgnoreAndReturn(cmock_retval) isOperator_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void isOperator_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define isOperator_ExpectAndReturn(unknownToken, cmock_retval) isOperator_CMockExpectAndReturn(__LINE__, unknownToken, cmock_retval)
void isOperator_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, Token* unknownToken, int cmock_to_return);
typedef int (* CMOCK_isOperator_CALLBACK)(Token* unknownToken, int cmock_num_calls);
void isOperator_StubWithCallback(CMOCK_isOperator_CALLBACK Callback);
#define isNumber_IgnoreAndReturn(cmock_retval) isNumber_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void isNumber_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define isNumber_ExpectAndReturn(unknownToken, cmock_retval) isNumber_CMockExpectAndReturn(__LINE__, unknownToken, cmock_retval)
void isNumber_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, Token* unknownToken, int cmock_to_return);
typedef int (* CMOCK_isNumber_CALLBACK)(Token* unknownToken, int cmock_num_calls);
void isNumber_StubWithCallback(CMOCK_isNumber_CALLBACK Callback);

#endif
